plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

def tagPrefix = "refs/tags/"
if ((System.getenv("CI_VERSION") ?: "").startsWith(tagPrefix)) {
    version = System.getenv("CI_VERSION").drop(tagPrefix.length())
}

version = version + "+" + project.minecraft_version

repositories {
    flatDir {
        dirs 'lib'
    }
}

configurations {
    shadow
    compile.extendsFrom(shadow)
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    shadow name: "dynmap-api-3.0-unshaded"
    shadow name: "DynmapCoreAPI-3.0-all"
    shadow name: "DynmapCore-3.0-unshaded"

    shadow 'javax.servlet:javax.servlet-api:3.1'
    shadow 'org.eclipse.jetty:jetty-server:9.4.26.v20200117'
    shadow 'org.eclipse.jetty:jetty-servlet:9.4.26.v20200117'
    shadow 'com.googlecode.json-simple:json-simple:1.1.1'
    shadow 'org.yaml:snakeyaml:1.23'
    shadow 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20180219.1'

    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    from {
        configurations.shadow.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
